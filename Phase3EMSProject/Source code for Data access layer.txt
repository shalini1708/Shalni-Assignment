Models:

EmpProfile.cs
-----------------------

namespace PHASE3APPLR.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Entity.Spatial;

    [Table("EmpProfile")]
    public partial class EmpProfile
    {
        [Key]
        [Column(Order = 0)]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        public int EmpCode { get; set; }

        [Key]
        [Column(Order = 1)]
        public DateTime DateOfBirth { get; set; }

        [Key]
        [Column(Order = 2)]
        [StringLength(50)]
        public string EmpName { get; set; }

        [Key]
        [Column(Order = 3)]
        [StringLength(50)]
        public string Email { get; set; }

        [Key]
        [Column(Order = 4)]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        public int DeptCode { get; set; }

        [Key]
        [Column("virtual DeptMaster", Order = 5)]
        [StringLength(50)]
        public string virtual_DeptMaster { get; set; }
    }
}

DeptMaster.cs
------------------------

namespace PHASE3APPLR.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Entity.Spatial;

    [Table("DeptMaster")]
    public partial class DeptMaster
    {
        [Key]
        [Column(Order = 0)]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        public int DeptCode { get; set; }

        [Key]
        [Column(Order = 1)]
        [StringLength(50)]
        public string DeptName { get; set; }

        [Key]
        [Column("virtual EmpProfiles", Order = 2)]
        [StringLength(50)]
        public string virtual_EmpProfiles { get; set; }
    }
}

EMPDBEntities.cs
------------------------------

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PHASE3APPLR.Models
{
    public class EMPDBEntities : DbContext
    {
        public EMPDBEntities() : base("name=schoolEntities")
        {

        }
        public DbSet<EmpProfile> EmpProfiles { get; set; }
        public DbSet<DeptMaster> DeptMasters { get; set; }


    }
    public class EMSDBInitializer : DropCreateDatabaseIfModelChanges<EMPDBEntities>
    {
        protected override void Seed(EMPDBEntities context)
        {
            var depts = new List<DeptMaster> {

                new DeptMaster { DeptCode=1,DeptName="Hr" },
                new DeptMaster { DeptCode=2,DeptName="Accounts" },

            };
            depts.ForEach(s => context.DeptMasters.Add(s));
            context.SaveChanges();
        }
    }
}


EmpProfileDAL.cs
-------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using PHASE3APPLR.Models;
namespace PHASE3APPLR
{
    public class EmpProfileDAL : IEmpProfileDAL<EmpProfile>
    {

        public bool SaveEmpProfile(EmpProfile empProfile)
        {
            try
            {
                using (EMPDBEntities dbContext = new EMPDBEntities())
                {
                    dbContext.EmpProfiles.Add(empProfile);
                    dbContext.SaveChanges();


                    return true;
                }
            }
            catch (Exception ex)
            {
                return false;
            }

        }
        public bool DeleteEmpProfile(int code)
        {
            try
            {
                using (EMPDBEntities dbContext = new EMPDBEntities())
                {
                    var employee = dbContext.EmpProfiles.Where(emp => emp.EmpCode == code).FirstOrDefault();
                    if (employee != null)
                    {
                        dbContext.EmpProfiles.Remove(employee);
                        dbContext.SaveChanges();
                        return true;
                    }
                    else
                    {
                        return false;
                    }

                }
            }
            catch (Exception ex)
            {
                return false;
            }
        }

        public bool UpdateEmpProfile(EmpProfile empProfile)
        {
            try
            {
                using (EMPDBEntities dbContext = new EMPDBEntities())
                {
                    var existEmployee = dbContext.EmpProfiles.Where(emp => emp.EmpCode == empProfile.EmpCode).FirstOrDefault();
                    if (existEmployee != null)
                    {
                        existEmployee.EmpCode = empProfile.EmpCode;
                        existEmployee.EmpName = empProfile.EmpName;
                        existEmployee.DateOfBirth = empProfile.DateOfBirth;
                        existEmployee.Email = empProfile.Email;
                        existEmployee.DeptCode = empProfile.DeptCode;

                        dbContext.SaveChanges();
                        return true;
                    }
                    else
                    {
                        return false;
                    }

                }
            }
            catch (Exception ex)
            {
                return false;
            }
        }

        public EmpProfile GetEmpProfile(int code)
        {
            try
            {
                using (EMPDBEntities dbContext = new EMPDBEntities())
                {
                    var existEmployee = dbContext.EmpProfiles.Where(emp => emp.EmpCode == code).FirstOrDefault();
                    if (existEmployee != null)
                    {

                        return existEmployee;
                    }
                    else
                    {
                        return null;
                    }

                }
            }
            catch (Exception ex)
            {
                return null;
            }
        }

        public List<EmpProfile> GetAllEmpProfiles()
        {
            List<EmpProfile> empProfiles = new List<EmpProfile>();
            try
            {
                using (EMPDBEntities dbContext = new EMPDBEntities())
                {
                    var employeeList = dbContext.EmpProfiles.ToList();
                    if (employeeList != null)
                    {
                        return employeeList;
                    }
                    else
                    {
                        return null;
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
        }
    }
}

IEmpProfileDAL.cs
--------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using PHASE3APPLR.Models;
namespace PHASE3APPLR
{
    public interface IEmpProfileDAL<EmpProfile>
    {
        bool SaveEmpProfile(EmpProfile empProfile);
        bool DeleteEmpProfile(int code);

        bool UpdateEmpProfile(EmpProfile empProfile);

        EmpProfile GetEmpProfile(int code);

        List<EmpProfile> GetAllEmpProfiles();
    }
}


Program.cs
------------------

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using PHASE3APPLR.Models;
namespace PHASE3APPLR
{
    internal class Program
    {
        static void Main()
        {
            using (var context = new EMPDBEntities())
            {
                Database.SetInitializer<EMPDBEntities>(new EMSDBInitializer());

                var depts = context.DeptMasters.ToList();

                foreach (var dept in depts)
                {
                    Console.WriteLine($"Code={dept.DeptCode}\tName={dept.DeptName}");
                }

                Console.ReadKey();
            }
        }
    }
}


